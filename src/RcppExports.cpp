// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// rnormdouble
double rnormdouble(double b, double c);
RcppExport SEXP _MSO_rnormdouble(SEXP bSEXP, SEXP cSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    rcpp_result_gen = Rcpp::wrap(rnormdouble(b, c));
    return rcpp_result_gen;
END_RCPP
}
// MSOBinlogitcpp
List MSOBinlogitcpp(arma::mat X, arma::mat V, arma::mat Y, double a2, double b2, double A2, double B2);
RcppExport SEXP _MSO_MSOBinlogitcpp(SEXP XSEXP, SEXP VSEXP, SEXP YSEXP, SEXP a2SEXP, SEXP b2SEXP, SEXP A2SEXP, SEXP B2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type V(VSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< double >::type a2(a2SEXP);
    Rcpp::traits::input_parameter< double >::type b2(b2SEXP);
    Rcpp::traits::input_parameter< double >::type A2(A2SEXP);
    Rcpp::traits::input_parameter< double >::type B2(B2SEXP);
    rcpp_result_gen = Rcpp::wrap(MSOBinlogitcpp(X, V, Y, a2, b2, A2, B2));
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_hello_world
arma::mat rcpparma_hello_world();
RcppExport SEXP _MSO_rcpparma_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpparma_hello_world());
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_outerproduct
arma::mat rcpparma_outerproduct(const arma::colvec& x);
RcppExport SEXP _MSO_rcpparma_outerproduct(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_outerproduct(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_innerproduct
double rcpparma_innerproduct(const arma::colvec& x);
RcppExport SEXP _MSO_rcpparma_innerproduct(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_innerproduct(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_bothproducts
Rcpp::List rcpparma_bothproducts(const arma::colvec& x);
RcppExport SEXP _MSO_rcpparma_bothproducts(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_bothproducts(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_MSO_rnormdouble", (DL_FUNC) &_MSO_rnormdouble, 2},
    {"_MSO_MSOBinlogitcpp", (DL_FUNC) &_MSO_MSOBinlogitcpp, 7},
    {"_MSO_rcpparma_hello_world", (DL_FUNC) &_MSO_rcpparma_hello_world, 0},
    {"_MSO_rcpparma_outerproduct", (DL_FUNC) &_MSO_rcpparma_outerproduct, 1},
    {"_MSO_rcpparma_innerproduct", (DL_FUNC) &_MSO_rcpparma_innerproduct, 1},
    {"_MSO_rcpparma_bothproducts", (DL_FUNC) &_MSO_rcpparma_bothproducts, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_MSO(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
